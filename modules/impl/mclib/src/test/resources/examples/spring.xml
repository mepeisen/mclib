<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<!-- the most powerful way -->
	<bean id="yamlConstructor" class="examples.CustomConstructor" scope="prototype" />
	<bean id="yamlRepresenter" class="de.minigameslib.mclib.snakeyaml.representer.Representer" scope="prototype" />
	<bean id="yamlOptions" class="de.minigameslib.mclib.snakeyaml.DumperOptions" scope="prototype">
		<property name="indent" value="2" />
	</bean>
	<bean id="snakeYaml" class="de.minigameslib.mclib.snakeyaml.Yaml" scope="prototype">
		<constructor-arg ref="yamlConstructor" />
		<constructor-arg ref="yamlRepresenter" />
        <constructor-arg ref="yamlOptions" />
	</bean>

	<!-- for a single JavaBean -->
    <bean id="beanConstructor" class="de.minigameslib.mclib.snakeyaml.constructor.Constructor" scope="prototype">
        <constructor-arg value="de.minigameslib.mclib.snakeyaml.Invoice" />
    </bean>
    <bean id="javabeanYaml" class="de.minigameslib.mclib.snakeyaml.Yaml" scope="prototype">
        <constructor-arg ref="beanConstructor" />
    </bean>

	<!-- the simplest way -->
	<bean id="standardYaml" class="de.minigameslib.mclib.snakeyaml.Yaml" scope="prototype" />
</beans>