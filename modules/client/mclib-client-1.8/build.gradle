def buildTime() {
	def date = new Date()
	def formattedDate = date.format('yyyyMMddHHmmss')
	return formattedDate
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://nexus.xworlds.eu/nexus/content/repositories/minecraftforge/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    /*dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }*/
}
// apply plugin: 'net.minecraftforge.gradle.forge'

plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
    
sourceCompatibility = 1.8
targetCompatibility = 1.8
group = "de.minigameslib.mclib.client"
version = "0.0.6.${buildTime()}"
configurations.all {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
    maven {
        name = "mce-repos"
        url = "http://nexus.xworlds.eu/nexus/content/groups/mce"
    }
}

archivesBaseName = "mclib-client-1.8"

sourceSets {
    main {
        java {
            srcDirs = ['../mclib-client/src/main/java', 'src/main/nms']
        }
        resources {
            srcDirs = ['../mclib-client/src/main/resources']
        }
    }
}

minecraft {
    runDir = "run"
    version = "1.8-11.14.4.1563"
    mappings = "snapshot_20141130"
    replaceIn "MclibMod.java"
    replace "VERSIONNUMBER", project.version
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        
        // replace $version and $mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

}

dependencies {
    compile "xpp3:xpp3:1.1.4c"
    compile files('../mclib-client/src/lib/twl/TWL.jar')
    
    compile "de.minigameslib.mclib:mclib-shared:0.0.6-SNAPSHOT"
    compile "de.minigameslib.mclib:mclib-private-shared:0.0.6-SNAPSHOT"
}

task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from { zipTree(jar.archivePath) }
}

task run1_8(dependsOn: [runClient]) {
}
